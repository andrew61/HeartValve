@model HeartValve.Models.MeasurementsViewModel

@{
    ViewBag.Title = "Measurements";

    if (Request.UserAgent.ToLower().Contains("ipad"))
    {
        Layout = null;
    }
    var imageBasePath = "https://tachl.musc.edu/heartvalve_api/images/";

}

@if (!Request.UserAgent.ToLower().Contains("ipad"))
{     
}
else
{
    <head>
        <meta charset="utf-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Summary Report</title>
        @Styles.Render("~/Content/css")
        @Scripts.Render("~/bundles/modernizr")

        <!--This bundle was moved by the Telerik VS Extensions for compatibility reasons-->
        @Scripts.Render("~/bundles/jquery")
        @Scripts.Render("~/bundles/bootstrap")
        <link href="@Url.Content("~/Content/kendo/2016.1.412/kendo.common.min.css")" rel="stylesheet" type="text/css" />
        <link href="@Url.Content("~/Content/kendo/2016.1.412/kendo.dataviz.min.css")" rel="stylesheet" type="text/css" />
        <link href="@Url.Content("~/Content/kendo/2016.1.412/kendo.default.min.css")" rel="stylesheet" type="text/css" />
        <link href="@Url.Content("~/Content/kendo/2016.1.412/kendo.dataviz.default.min.css")" rel="stylesheet" type="text/css" />
        <script src="@Url.Content("~/Scripts/kendo/2016.1.412/jquery.min.js")"></script>
        <script src="@Url.Content("~/Scripts/jszip.min.js")"></script>
        <script src="@Url.Content("~/Scripts/kendo.all.min.testing.js")"></script>
        <script src="@Url.Content("~/Scripts/kendo/2016.1.412/kendo.aspnetmvc.min.js")"></script>
        <script src="@Url.Content("~/Scripts/kendo.modernizr.custom.js")"></script>
    </head>
}
<br/>
<br/>
<div class="row">
    <div class="col-sm-12 col-md-2">
        @(
    Html.Kendo().DropDownList()
        .Name("UserId")
        .HtmlAttributes(new { required = "required", data_required_msg = "Select user", style = "width: 200px" })
        .OptionLabel("Select user")
        .BindTo(Model.UserSelectList)
        .Events(e => e.Change("user_change"))
        )
    </div>

    <div class="col-sm-12 col-md-2">
        @Html.Label("Start Date") &nbsp;
        @Html.Kendo().DatePickerFor(model => model.StartDate).Name("StartDate").HtmlAttributes(new { style = "width: 200px" }).Events(e => e.Change("user_change"))&nbsp;&nbsp;&nbsp;
    </div>
    <div class="col-sm-12 col-md-2">
        @Html.Label("End Date")&nbsp;
        @Html.Kendo().DatePickerFor(model => model.EndDate).Name("EndDate").HtmlAttributes(new { style = "width: 200px" }).Events(e => e.Change("user_change"))
    </div>
</div>

<br />

<div class="row">
    <div class="col-sm-12" style="width:100%; height:100%;">

        <div class="panel with-nav-tabs panel-default">
            <div class="panel-heading">
                <ul class="nav nav-tabs">
                    <li class="active"><a href="#tab1primary" data-toggle="tab" id="WeightTab" onclick="testing()">Weight</a></li>
                    <li><a href="#tab2primary" data-toggle="tab" id="BpTab" onclick="testing()">Blood Pressure</a></li>
                    <li><a href="#tab3primary" data-toggle="tab" id="OxiTab" onclick="testing()">Oxygen Saturation</a></li>
                    <li><a href="#tab4primary" data-toggle="tab" id="SurveyTab">Survey Responses</a></li>
                </ul>
            </div>
            <div class="panel-body">
                <div class="tab-content">
                    <div class="tab-pane fade in active" id="tab1primary">

                        <div class="WeightReportDiv" style="display:none">
                            @if (!Request.UserAgent.ToLower().Contains("ipad"))
                            {
                                <button id="exportSummaryReport" class="k-button"><span class="k-icon k-i-excel"></span>Export to Excel</button>
                            }
                            <br />

                            <div id="WeightChartDiv" style="min-width:500px;"></div>

                            @(Html.Kendo().Grid<dynamic>()
                    .Name("WeightSummaryGrid")
                    .Columns(columns =>
                    {
                        foreach (System.Data.DataColumn column in Model.WeightTable.Columns)
                        {
                            columns.Bound(column.DataType, column.ColumnName).Title(column.Caption)
                                .FooterTemplate(x =>
                                {
                                });
                        }
                    })
                    .DataSource(dataSource => dataSource
                        .Ajax()
                        .Model(model =>
                        {
                            foreach (System.Data.DataColumn column in Model.WeightTable.Columns)
                            {
                                model.Field(column.ColumnName, column.DataType);
                            }
                        })
                        .Read(read => read.Action("WeightMeasurements_Read", "Reports").Data("function() { return { userId: $('#UserId').val(), StartDate: $('#StartDate').val(), EndDate: $('#EndDate').val() } }"))
                    )
                    .AutoBind(true)
                    .Groupable()
                    .Sortable(s => s.AllowUnsort(true))
                    .Filterable(ftb => ftb.Mode(GridFilterMode.Menu))
                    .Pageable(pageable => pageable
                        .Refresh(true)
                        .PageSizes(true)
                        .ButtonCount(5)
                    )
                    .Scrollable(scr => scr.Height("auto"))
                    .Events(events => events.ExcelExport("weight_excelExport"))
                            )
                        </div>

                    </div>
                    <div class="tab-pane fade" id="tab2primary" style="width:100%; height:100%;">

                        <div class="BpReportDiv" style="display:none">
                            @if (!Request.UserAgent.ToLower().Contains("ipad"))
                            {
                                <button id="exportSummaryReport2" class="k-button"><span class="k-icon k-i-excel"></span>Export to Excel</button>
                            }
                            <br>

                            <div id="BloodPressureChartDiv"></div>
                            @(Html.Kendo().Grid<dynamic>()
                    .Name("BPSummaryGrid")
                    .Columns(columns =>
                    {
                        foreach (System.Data.DataColumn column in Model.BloodPressureTable.Columns)
                        {
                            columns.Bound(column.DataType, column.ColumnName).Title(column.Caption)
                                .FooterTemplate(x =>
                                {
                                });
                        }
                    })
                    .DataSource(dataSource => dataSource
                        .Ajax()
                        .Model(model =>
                        {
                            foreach (System.Data.DataColumn column in Model.BloodPressureTable.Columns)
                            {
                                model.Field(column.ColumnName, column.DataType);
                            }
                        })
                        .Read(read => read.Action("BPMeasurements_Read", "Reports").Data("function() { return { userId: $('#UserId').val(), StartDate: $('#StartDate').val(), EndDate: $('#EndDate').val() } }"))
                    )
                    .AutoBind(true)
                    .Groupable()
                    .Sortable(s => s.AllowUnsort(true))
                    .Filterable(ftb => ftb.Mode(GridFilterMode.Menu))
                    .Pageable(pageable => pageable
                        .Refresh(true)
                        .PageSizes(true)
                        .ButtonCount(5)
                    )
                    .Scrollable(scr => scr.Height("auto"))
                    .Events(events => events.ExcelExport("bp_excelExport"))
                            )

                          
                        </div>

                    </div>
                    <div class="tab-pane fade" id="tab3primary">

                        <div class="OxiReportDiv" style="display:none">
                            @if (!Request.UserAgent.ToLower().Contains("ipad"))
                            {
                                <button id="exportSummaryReport3" class="k-button"><span class="k-icon k-i-excel"></span>Export to Excel</button>
                            }
                            <br />
                            <br />

                            <div id="OxygenSaturationChartDiv"></div>
                            @(Html.Kendo().Grid<dynamic>()
                    .Name("OxygenSaturationSummaryGrid")
                    .Columns(columns =>
                    {
                        foreach (System.Data.DataColumn column in Model.WeightTable.Columns)
                        {
                            columns.Bound(column.DataType, column.ColumnName).Title(column.Caption)
                                .FooterTemplate(x =>
                                {
                                });
                        }
                    })
                    .DataSource(dataSource => dataSource
                        .Ajax()
                        .Model(model =>
                        {
                            foreach (System.Data.DataColumn column in Model.WeightTable.Columns)
                            {
                                model.Field(column.ColumnName, column.DataType);
                            }
                        })
                        .Read(read => read.Action("OxygenSaturation_Read", "Reports").Data("function() { return { userId: $('#UserId').val(), StartDate: $('#StartDate').val(), EndDate: $('#EndDate').val() } }"))
                    )
                    .AutoBind(true)
                    .Groupable()
                    .Sortable(s => s.AllowUnsort(true))
                    .Filterable(ftb => ftb.Mode(GridFilterMode.Menu))
                    .Pageable(pageable => pageable
                        .Refresh(true)
                        .PageSizes(true)
                        .ButtonCount(5)
                    )
                    .Scrollable(scr => scr.Height("auto"))
                    .Events(events => events.ExcelExport("oxygensaturation_excelExport"))
                            )

                        </div>

                    </div>
                    <div class="tab-pane fade" id="tab4primary">

                        @(Html.Kendo().Grid<HeartValve.Shared.Data.GetSurveyResponseReport_Result>()
        .Name("SurveyResponsesGrid")
        .Columns(columns =>
        {    
            columns.Bound(x => x.QuestionText);
            columns.Bound(x => x.AnswerText).ClientTemplate("#if(!AnswerText.includes('.jpg')){# #=AnswerText# #}else{# <a onclick=\"ShowImage(this)\"><img width='80%' src='" + imageBasePath + "#=AnswerText#' ></img></a> #}#");
            columns.Bound(x => x.AnswerDate).ClientTemplate("#= kendo.toString(AnswerDate, \"M/d/yyyy h:mm tt\") #");
        })
        .ToolBar(tools =>
        {
            tools.Excel();
            tools.Pdf();
        })
        .Editable(editable => editable.Mode(GridEditMode.InLine))
        .Pageable()
        .Sortable()
        .Scrollable()
        .Excel(excel => excel
            .AllPages(true)
            .Filterable(true)
            .FileName("Survey Responses.xlsx")
        .ProxyURL(Url.Action("SaveExcelSurveyResponses", "Reports"))
        .ForceProxy(true)
        )
        .Pdf(pdf => pdf                      
            .AllPages()
            .AvoidLinks()
            .Margin("1cm", "1cm", "1cm", "1cm")
            .FileName("SurveyResponses")
            .ProxyURL(Url.Action("SaveSurveyResponses", "Reports"))
            .ForceProxy(true)
            
         
        )
        .Events(events => events.ExcelExport("survey_excelExport"))
        
    .HtmlAttributes(new { style = "height: 500px;" })
    .AutoBind(false)
    .DataSource(dataSource => dataSource
        .Ajax()
        .PageSize(10)
        .Model(model =>
        {
            model.Id(x => x.SessionId);
        })
        .Read(read => read.Action("SurveyResponses", "Reports").Data("function() { return { userId: $('#UserId').val(), StartDate: $('#StartDate').val(), EndDate: $('#EndDate').val() } }"))
    )
                        )


                        <div class="modal fade" id="imageModal">
                            <div class="modal-dialog" role="document">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                            <span aria-hidden="true">&times;</span>
                                        </button>
                                        <h5 class="modal-title">Image</h5>

                                    </div>
                                    <div class="modal-body">
                                        <div id="imageDiv" style="text-align:center"></div>
                                    </div>
                                    <div class="modal-footer">
                                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section scripts
{ 
    <script>

        $(document).ready(function () {
            $("#SurveyResponsesGrid").hide();

            if ($('#StartDate').val() != '' && $('#EndDate').val() != '') {
                if (Date.parse($('#StartDate').val()) > Date.parse($('#EndDate').val())) {
                    alert('End date should be before start date');
                    $('#EndDate').val($('#StartDate').val());
                }
            }
                //$('a[data-toggle=tab]').click(function () {
                //    if ($('#UserId').val() != '') {

                //        if (this.id == 'OxiTab') {
                //            $(".OxiReportDiv").show();
                //            $('#OxygenSaturationChartDiv').load("OxygenSaturationChart?userId=" + $('#UserId').val() + "&StartDate=" + $('#StartDate').val() + "&EndDate=" + $('#EndDate').val());
                //            $('#OxygenSaturationChartDiv').focus();
                //            $('#OxygenSaturationSummaryGrid').data("kendoGrid").dataSource.read();

                //        }
                //        else if (this.id == 'WeightTab') {
                //            $(".WeightReportDiv").show();
                //            $('#WeightChartDiv').load("WeightChart?userId=" + $('#UserId').val() + "&StartDate=" + $('#StartDate').val() + "&EndDate=" + $('#EndDate').val());
                //            $('#WeightChartDiv').focus();
                //            $('#WeightSummaryGrid').data("kendoGrid").dataSource.read();

                //        }
                //        else if (this.id == 'BpTab') {
                //            $(".BpReportDiv").show();
                //            $('#BloodPressureChartDiv').load("BloodPressureChart?userId=" + $('#UserId').val() + "&StartDate=" + $('#StartDate').val() + "&EndDate=" + $('#EndDate').val());
                //            $('#BloodPressureChartDiv').focus();
                //            $('#BPSummaryGrid').data("kendoGrid").dataSource.read();

                //        }
                //        else {
                //            $("#SurveyResponsesGrid").show();
                //            $('#SurveyResponsesGrid').data("kendoGrid").dataSource.read();

                //        }
                //    }
                //})
            
        });

        $('#export').click(function (e) {

            window.location = '@Url.Action("GetSurveyResponses", "Reports")?userId=' + $('#UserId').val() + '&StartDate=' + $('#StartDate').val() + '&EndDate=' + $('#EndDate').val() + '&UserName=' + $('#UserId').text();

        });

       
        function testing() {
            if ($('#UserId').data("kendoDropDownList").value() == "") {
            }
            else {
                if ($('#StartDate').val() != '' && $('#EndDate').val() != '') {
                    if (Date.parse($('#StartDate').val()) > Date.parse($('#EndDate').val())) {
                        alert('End date should be before start date');
                        $('#EndDate').val($('#StartDate').val());
                    }
                }
                $("#SurveyResponsesGrid").show();
                $('#SurveyResponsesGrid').data("kendoGrid").dataSource.read();
                $(".WeightReportDiv").show();
                $(".BpReportDiv").show();
                $(".OxiReportDiv").show();

                $('#WeightChartDiv').load("WeightChart?userId=" + $('#UserId').val() + "&StartDate=" + $('#StartDate').val() + "&EndDate=" + $('#EndDate').val());
                $('#WeightChartDiv').focus();

                $('#BloodPressureChartDiv').load("BloodPressureChart?userId=" + $('#UserId').val() + "&StartDate=" + $('#StartDate').val() + "&EndDate=" + $('#EndDate').val());
                $('#BloodPressureChartDiv').focus();

                $('#OxygenSaturationChartDiv').load("OxygenSaturationChart?userId=" + $('#UserId').val() + "&StartDate=" + $('#StartDate').val() + "&EndDate=" + $('#EndDate').val());
                $('#OxygenSaturationChartDiv').focus();

                $('#BPSummaryGrid').data("kendoGrid").dataSource.read();
                $('#WeightSummaryGrid').data("kendoGrid").dataSource.read();
                $('#OxygenSaturationSummaryGrid').data("kendoGrid").dataSource.read();

            }
        }

        function user_change() {
            if ($('#UserId').data("kendoDropDownList").value() == "") {
            }
            else {
                if ($('#StartDate').val() != '' && $('#EndDate').val() != '') {
                    if (Date.parse($('#StartDate').val()) > Date.parse($('#EndDate').val())) {
                        alert('End date should be before start date');
                        $('#EndDate').val($('#StartDate').val());
                    }
                }
                $("#SurveyResponsesGrid").show();
                $('#SurveyResponsesGrid').data("kendoGrid").dataSource.read();
                $(".WeightReportDiv").show();
                $(".BpReportDiv").show();
                $(".OxiReportDiv").show();


                $('#BPSummaryGrid').data("kendoGrid").dataSource.read();
                $('#WeightSummaryGrid').data("kendoGrid").dataSource.read();
                $('#OxygenSaturationSummaryGrid').data("kendoGrid").dataSource.read();

                $('#WeightChartDiv').load("WeightChart?userId=" + $('#UserId').val() + "&StartDate=" + $('#StartDate').val() + "&EndDate=" + $('#EndDate').val());
                $('#WeightChartDiv').focus();


                $('#BloodPressureChartDiv').load("BloodPressureChart?userId=" + $('#UserId').val() + "&StartDate=" + $('#StartDate').val() + "&EndDate=" + $('#EndDate').val());
                $('#BloodPressureChartDiv').focus();


                $('#OxygenSaturationChartDiv').load("OxygenSaturationChart?userId=" + $('#UserId').val() + "&StartDate=" + $('#StartDate').val() + "&EndDate=" + $('#EndDate').val());
                $('#OxygenSaturationChartDiv').focus();

            }
        }


        function ShowImage(e) {

            var grid = $("#SurveyResponsesGrid").data("kendoGrid");
            var items = grid.dataItem(e.closest("tr"));

            $('#imageDiv').empty();
            document.getElementById("imageDiv").innerHTML = "<img width='100%' src='https://tachl.musc.edu/heartvalve_api/images/" + items.AnswerText + "' ></img>";

            $('#imageModal').modal('show');
        }


</script> 
}

    <script type="text/javascript">
        var promises = [
            $.Deferred(),
            $.Deferred(),
            $.Deferred()
        ];

        $('#exportSummaryReport').click(function (e) {            
            window.location = '@Url.Action("GetSummaryReport", "Reports")?userId=' + $('#UserId').val() + '&StartDate=' + $('#StartDate').val() + '&EndDate=' + $('#EndDate').val() + '&UserName=' + $('#UserId').text();         
        });
        $('#exportSummaryReport2').click(function (e) {
            window.location = '@Url.Action("GetSummaryReport", "Reports")?userId=' + $('#UserId').val() + '&StartDate=' + $('#StartDate').val() + '&EndDate=' + $('#EndDate').val() + '&UserName=' + $('#UserId').text();
        });
        $('#exportSummaryReport3').click(function (e) {
            window.location = '@Url.Action("GetSummaryReport", "Reports")?userId=' + $('#UserId').val() + '&StartDate=' + $('#StartDate').val() + '&EndDate=' + $('#EndDate').val() + '&UserName=' + $('#UserId').text();
        });

        $("#ExportWeight").click(function () {
            $("#WeightChart").getKendoChart().saveAsPDF();
        });

        function survey_excelExport(e) {
            e.preventDefault();
            var grid = $("#SurveyResponsesGrid").data("kendoGrid");
            if (grid.dataSource.total() == 0) {
                e.preventDefault();
                alert("No Records Found");
            }
            else {
                window.location = '@Url.Action("SaveExcelSurveyResponses", "Reports")?userId=' + $('#UserId').val() + '&StartDate=' + $('#StartDate').val() + '&EndDate=' + $('#EndDate').val() + '&UserName=' + $('#UserId').text();
            }
        }

        function weight_excelExport(e) {
            e.preventDefault();
            promises[0].resolve(e.workbook);
        }

        function bp_excelExport(e) {
            e.preventDefault();
            promises[1].resolve(e.workbook);
        }

        function oxygensaturation_excelExport(e) {
            e.preventDefault();
            promises[2].resolve(e.workbook);
        }

    </script>

<style>
    .k-textbox {
        width: 11.8em;
    }

    .required {
        font-weight: bold;
    }

    .accept, .status {
        padding-left: 90px;
    }

    .valid {
        color: green;
    }

    .invalid {
        color: red;
    }

    span.k-tooltip {
        display: block;
        position: absolute;
    }

    .k-button {
        margin-top: 15px;
    }

</style>
    @if (!Request.UserAgent.ToLower().Contains("ipad"))
    {
        <style>
            .k-tabstrip .k-content {
                padding: 5px 10px;
            }

            .box {
                text-align: right;
                padding-right: 5px;
            }

            #export {
                margin: 10px 0;
            }
        </style>
    }
    else
    {
        <style>
            body {
                padding-top: 0;
            }

            .k-grid {
                font-size: 12px;
            }

                .k-grid .k-header {
                    font-size: 12px;
                }

                .k-grid td {
                    font-size: 12px;
                }
            .k-grid-pdf {
                color:red;
            }
        </style>
    }

